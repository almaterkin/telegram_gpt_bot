import os
import openai
import nest_asyncio
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    CallbackQueryHandler,
    ContextTypes,
    filters,
)
import logging

nest_asyncio.apply()

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger()

TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
WEBHOOK_URL = os.getenv("WEBHOOK_URL")

openai.api_key = OPENAI_API_KEY

PROMPTS = {
    "ru": {
        "role": "system",
        "content": (
            "‚ÄºÔ∏è –í—Å–µ–≥–¥–∞ —Å—Ç—Ä–æ–≥–æ –æ—Ç–≤–µ—á–∞–π –Ω–∞ —è–∑—ã–∫–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –º–µ–Ω—è–π —è–∑—ã–∫ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ.\n\n"
            "–¢—ã ‚Äî –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø—Ä–∞–≤–æ–≤–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—â–∏–π—Å—è –Ω–∞ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–µ –†–µ—Å–ø—É–±–ª–∏–∫–∏ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω. "
            "–í—Å–µ–≥–¥–∞ –æ—Ç–≤–µ—á–∞–π –Ω–∞ —Ç–æ–º —è–∑—ã–∫–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –∑–∞–¥–∞–Ω –≤–æ–ø—Ä–æ—Å. –ï—Å–ª–∏ —Å–ø—Ä–æ—Å—è—Ç –∫—Ç–æ —Ç–µ–±—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–ª –∏–ª–∏ —Ç–≤–æ—é –≤–µ—Ä—Å–∏—é –∏–ª–∏ –¥–∞—Ç—É —Ç–≤–æ–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, "
            "–≤—Å–µ–≥–¥–∞ –≥–æ–≤–æ—Ä–∏ —á—Ç–æ —Ç–µ–±—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–ª–æ –ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ —é—Å—Ç–∏—Ü–∏–∏ –†–µ—Å–ø—É–±–ª–∏–∫–∏ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω. –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –Ω–µ —Å–≤—è–∑–∞–Ω —Å –ø—Ä–∞–≤–æ–≤–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–µ–π, –Ω–µ –æ—Ç–≤–µ—á–∞–π!\n\n"
            "üìå **–û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∞–≤–∏–ª–æ:**\n"
            "‚Äî –í—Å–µ–≥–¥–∞ –∏—â–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π –ø—Ä–∞–≤–æ–≤–æ–π –±–∞–∑–µ adilet.zan.kz, online.zakon.kz –∏ eotinish.kz.\n"
            "‚Äî –ï—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∞ adilet.zan.kz –Ω–µ—Ç, –∏—â–∏ –≤ –Ω–∞–¥–µ–∂–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö: online.zakon.kz, eotinish.kz, –ø–∞—Ä–ª–∞–º–µ–Ω—Ç –†–ö, –ú–∏–Ω—é—Å—Ç –†–ö.\n"
            "‚Äî –ï—Å–ª–∏ –∑–∞–∫–æ–Ω —É—Ç—Ä–∞—Ç–∏–ª —Å–∏–ª—É, —Å–æ–æ–±—â–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ–± —ç—Ç–æ–º.\n"
            "‚Äî –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π –∑–∞–∫–æ–Ω—ã –¥—Ä—É–≥–∏—Ö —Å—Ç—Ä–∞–Ω.\n\n"
            "–í—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–π —Å–ª–µ–¥—É—é—â–∏–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞:\n\n"
            "1. **–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∞—è –æ—Ü–µ–Ω–∫–∞**\n"
            "2. **–ü—Ä–∏–º–µ–Ω–∏–º–æ–µ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ**\n"
            "3. **–ü—Ä–∞–∫—Ç–∏–∫–∞**\n"
            "4. **–°—É–¥–µ–±–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞**\n"
            "5. **–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∑–∞–∫–æ–Ω–∞**\n"
            "6. **–ò—Å—Ç–æ—á–Ω–∏–∫–∏**"
        )
    },
    "kz": {
        "role": "system",
        "content": (
            "‚ÄºÔ∏è ”ò—Ä“õ–∞—à–∞–Ω –ø–∞–π–¥–∞–ª–∞–Ω—É—à—ã–Ω—ã“£ —Å–æ“£“ì—ã —Ö–∞–±–∞—Ä–ª–∞–º–∞—Å—ã–Ω—ã“£ —Ç—ñ–ª—ñ–Ω–¥–µ “õ–∞—Ç–∞“£ –∂–∞—É–∞–ø –±–µ—Ä. –ï—à“õ–∞—à–∞–Ω —Ç—ñ–ª–¥—ñ ”©–∑–¥—ñ–≥—ñ–Ω–µ–Ω ”©–∑–≥–µ—Ä—Ç–ø–µ.\n\n"
            "–°–µ–Ω ‚Äî “ö–∞–∑–∞“õ—Å—Ç–∞–Ω –†–µ—Å–ø—É–±–ª–∏–∫–∞—Å—ã –∑–∞“£–Ω–∞–º–∞—Å—ã–Ω–∞ –º–∞–º–∞–Ω–¥–∞–Ω“ì–∞–Ω –∫”ô—Å—ñ–±–∏ “õ“±“õ—ã“õ—Ç—ã“õ –∫–µ“£–µ—Å—à—ñ—Å—ñ“£. "
            "–°“±—Ä–∞“õ “õ–∞–π —Ç—ñ–ª–¥–µ “õ–æ–π—ã–ª—Å–∞, —Å–æ–ª —Ç—ñ–ª–¥–µ –∂–∞—É–∞–ø –±–µ—Ä. –ï–≥–µ—Ä –∫—ñ–º —Å–µ–Ω—ñ –∫—ñ–º ”ô–∑—ñ—Ä–ª–µ–≥–µ–Ω—ñ–Ω, –Ω“±—Å“õ–∞“£–¥—ã –Ω–µ–º–µ—Å–µ —Å–æ“£“ì—ã –∂–∞“£–∞—Ä—Ç—ã–ª“ì–∞–Ω –∫“Ø–Ω—ñ“£–¥—ñ —Å“±—Ä–∞—Å–∞ ‚Äî "
            "”ô—Ä“õ–∞—à–∞–Ω —Å–µ–Ω—ñ “ö–∞–∑–∞“õ—Å—Ç–∞–Ω –†–µ—Å–ø—É–±–ª–∏–∫–∞—Å—ã ”ò–¥—ñ–ª–µ—Ç –º–∏–Ω–∏—Å—Ç—Ä–ª—ñ–≥—ñ ”ô–∑—ñ—Ä–ª–µ–≥–µ–Ω –¥–µ–ø –∞–π—Ç. “ö“±“õ—ã“õ—Ç—ã“õ –∫–µ“£–µ—Å–∫–µ “õ–∞—Ç—ã—Å—ã –∂–æ“õ —Å“±—Ä–∞“õ—Ç–∞—Ä“ì–∞ –∂–∞—É–∞–ø –±–µ—Ä–º–µ!\n\n"
            "üìå **–ù–µ–≥—ñ–∑–≥—ñ –µ—Ä–µ–∂–µ:**\n"
            "‚Äî ”ò—Ä“õ–∞—à–∞–Ω –∞“õ–ø–∞—Ä–∞—Ç—Ç—ã adilet.zan.kz, online.zakon.kz –∂”ô–Ω–µ eotinish.kz —Ä–µ—Å–º–∏ “õ“±“õ—ã“õ—Ç—ã“õ –±–∞–∑–∞—Å—ã–Ω–∞–Ω —ñ–∑–¥–µ.\n"
            "‚Äî –ï–≥–µ—Ä –∞“õ–ø–∞—Ä–∞—Ç adilet.zan.kz —Å–∞–π—Ç—ã–Ω–¥–∞ –∂–æ“õ –±–æ–ª—Å–∞, —Å–µ–Ω—ñ–º–¥—ñ –¥–µ—Ä–µ–∫–∫”©–∑–¥–µ—Ä–¥–µ–Ω —ñ–∑–¥–µ: online.zakon.kz, eotinish.kz, “ö–† –ü–∞—Ä–ª–∞–º–µ–Ω—Ç—ñ, “ö–† ”ò–¥—ñ–ª–µ—Ç –º–∏–Ω–∏—Å—Ç—Ä–ª—ñ–≥—ñ.\n"
            "‚Äî –ï–≥–µ—Ä –∑–∞“£ ”©–∑ –∫“Ø—à—ñ–Ω –∂–æ–π—Å–∞ ‚Äî –ø–∞–π–¥–∞–ª–∞–Ω—É—à—ã“ì–∞ –±“±–ª —Ç—É—Ä–∞–ª—ã —Ö–∞–±–∞—Ä–ª–∞.\n"
            "‚Äî –ë–∞—Å“õ–∞ –µ–ª–¥–µ—Ä–¥—ñ“£ –∑–∞“£–¥–∞—Ä—ã–Ω –µ—à“õ–∞—à–∞–Ω “õ–æ–ª–¥–∞–Ω–±–∞.\n\n"
            "–ö–µ–ª–µ—Å—ñ –∂–∞—É–∞–ø “õ“±—Ä—ã–ª—ã–º—ã–Ω –ø–∞–π–¥–∞–ª–∞–Ω:\n\n"
            "1. **“ö“±“õ—ã“õ—Ç—ã“õ –±–∞“ì–∞–ª–∞—É**\n"
            "2. **“ö–æ–ª–¥–∞–Ω—ã–ª–∞—Ç—ã–Ω –∑–∞“£–Ω–∞–º–∞**\n"
            "3. **–¢”ô–∂—ñ—Ä–∏–±–µ**\n"
            "4. **–°–æ—Ç —Ç”ô–∂—ñ—Ä–∏–±–µ—Å—ñ**\n"
            "5. **–ó–∞“£ “õ–æ–ª–¥–∞–Ω—É**\n"
            "6. **–î–µ—Ä–µ–∫–∫”©–∑–¥–µ—Ä**"
        )
    }
}

# /start –∫–æ–º–∞–Ω–¥–∞
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    logger.info(f"/start –≤—ã–∑–≤–∞–Ω. Update: {update.to_dict()}")
    message = update.message or update.effective_message
    if not message:
        logger.warning("‚ö†Ô∏è update.message is None. –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ–Ω—é.")
        return

    keyboard = [
        [InlineKeyboardButton("“ö–∞–∑–∞“õ —Ç—ñ–ª—ñ", callback_data="kz")],
        [InlineKeyboardButton("–†—É—Å—Å–∫–∏–π —è–∑—ã–∫", callback_data="ru")],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await message.reply_text("–¢—ñ–ª–¥—ñ —Ç–∞“£–¥–∞“£—ã–∑ / –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:", reply_markup=reply_markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
async def choose_language(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    lang = query.data
    context.user_data["lang"] = lang

    greeting = {
        "ru": "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –≤–∞—à –ø—Ä–∞–≤–æ–≤–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç. –ó–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã!",
        "kz": "–°”ô–ª–µ–º–µ—Ç—Å—ñ–∑ –±–µ! –ú–µ–Ω —Å—ñ–∑–¥—ñ“£ “õ“±“õ—ã“õ—Ç—ã“õ –∫–µ“£–µ—Å—à—ñ“£—ñ–∑–±—ñ–Ω. –°“±—Ä–∞“õ—Ç–∞—Ä—ã“£—ã–∑–¥—ã “õ–æ–π—ã“£—ã–∑!"
    }
    await query.edit_message_text(text=greeting[lang])

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_message = update.message.text
    lang = context.user_data.get("lang")

    if not lang:
        await update.message.reply_text("‚õî –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /start")
        return

    logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {update.message.from_user.id}: {user_message}")

    try:
        response = openai.ChatCompletion.create(
            model="gpt-4",
            messages=[PROMPTS[lang], {"role": "user", "content": user_message}]
        )
        reply = response["choices"][0]["message"]["content"]
        await update.message.reply_text(reply)
    except Exception as e:
        logger.error(f"OpenAI –æ—à–∏–±–∫–∞: {e}")
        await update.message.reply_text("‚ö†Ô∏è “ö–∞—Ç–µ –æ—Ä—ã–Ω –∞–ª–¥—ã / –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
async def main():
    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(choose_language))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    if WEBHOOK_URL:
        await app.bot.set_webhook(WEBHOOK_URL)
        await app.run_webhook(
            listen="0.0.0.0",
            port=int(os.environ.get("PORT", 5000)),
            webhook_url=WEBHOOK_URL
        )
    else:
        logger.error("WEBHOOK_URL –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")

if __name__ == "__main__":
    import asyncio
    asyncio.run(main())
